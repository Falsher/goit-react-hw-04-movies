{"version":3,"sources":["components/apiservice/apiservice.js","pages/MovieDetailsPage.js"],"names":["BASE_URL","KEY","fetchMoviePopular","axios","get","fetchMovieList","query","fetchMovieId","moviesId","fetchActorId","fetchReviews","Cast","lazy","Reviews","MovieDetailsPage","location","useLocation","history","useHistory","useRouteMatch","url","path","slug","useParams","useState","movie","setMovie","match","useEffect","ApiService","then","type","onClick","push","state","from","src","data","poster_path","alt","original_title","height","vote_average","overview","genres","map","genre","name","id","to","fallback"],"mappings":"yIAAA,+LACMA,EAAW,gCACXC,EAAM,mCACL,SAASC,IACd,OAAOC,IAAMC,IAAN,UAAaJ,EAAb,uCAAoDC,IAEtD,SAASI,EAAeC,GAC7B,OAAOH,IAAMC,IAAN,UAAaJ,EAAb,gCAA6CC,EAA7C,kBAA0DK,IAE5D,SAASC,EAAaC,GAC3B,OAAOL,IAAMC,IAAN,UACFJ,EADE,iBACeQ,EADf,oBACmCP,EADnC,oBAKF,SAASQ,EAAaD,GAC3B,OAAOL,IAAMC,IAAN,UACFJ,EADE,iBACeQ,EADf,4BAC2CP,EAD3C,oBAIF,SAASS,EAAaF,GAC3B,OAAOL,IAAMC,IAAN,UACFJ,EADE,iBACeQ,EADf,4BAC2CP,EAD3C,6B,+HCTHU,EAAOC,gBAAK,kBAAM,gCAClBC,EAAUD,gBAAK,kBAAM,gCACZ,SAASE,IACtB,IAAMC,EAAWC,cAEXC,EAAUC,cAChB,EAAsBC,cAAdC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,KACLC,EAASC,cAATD,KACR,EAA0BE,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMlB,EAAWc,EAAKK,MAAM,cAAc,GAE1CC,qBAAU,WACRC,IAAwBrB,GAAUsB,KAAKJ,KACtC,CAAClB,IAIJ,OACE,qCACGiB,GACC,qCACE,wBAAQM,KAAK,SAASC,QAPf,WAAO,IAAD,IACnBf,EAAQgB,KAAR,iBAAalB,QAAb,IAAaA,GAAb,UAAaA,EAAUmB,aAAvB,aAAa,EAAiBC,YAA9B,QAAsC,MAMhC,qBAIA,gCACE,qBACEC,IAAG,yCAAoCX,EAAMY,KAAKC,aAClDC,IAAKd,EAAMY,KAAKG,eAChBC,OAAO,QAET,4BAAIhB,EAAMY,KAAKG,iBACf,2CAAcf,EAAMY,KAAKK,aAAzB,OACA,yCAAYjB,EAAMY,KAAKM,YACtBlB,EAAMY,KAAKO,OAAOC,KAAI,SAAAC,GACrB,OAAO,4BAAmBA,EAAMC,MAAjBD,EAAME,aAK7B,uBAECvB,GACC,+BACE,6BACE,cAAC,IAAD,CAASwB,GAAE,UAAK7B,EAAL,SAAX,oBAEF,6BACE,cAAC,IAAD,CAAS6B,GAAE,UAAK7B,EAAL,YAAX,0BAIN,cAAC,WAAD,CAAU8B,SAAU,6CAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO7B,KAAI,UAAKA,EAAL,SAAX,SACE,cAACV,EAAD,MAEF,cAAC,IAAD,CAAOU,KAAI,UAAKA,EAAL,YAAX,SACE,cAACR,EAAD","file":"static/js/Movies-Page.96125fa8.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\nconst KEY = '817a09125521bca0055d8c5979b5a1ec';\r\nexport function fetchMoviePopular() {\r\n  return axios.get(`${BASE_URL}trending/movie/week?api_key=${KEY}`);\r\n}\r\nexport function fetchMovieList(query) {\r\n  return axios.get(`${BASE_URL}search/movie?api_key=${KEY}&query=${query}`);\r\n}\r\nexport function fetchMovieId(moviesId) {\r\n  return axios.get(\r\n    `${BASE_URL}movie/${moviesId}?api_key=${KEY}&language=en-US`,\r\n  );\r\n}\r\n\r\nexport function fetchActorId(moviesId) {\r\n  return axios.get(\r\n    `${BASE_URL}movie/${moviesId}/credits?api_key=${KEY}&language=en-US`,\r\n  );\r\n}\r\nexport function fetchReviews(moviesId) {\r\n  return axios.get(\r\n    `${BASE_URL}movie/${moviesId}/reviews?api_key=${KEY}&language=en-US&page=1`,\r\n  );\r\n}\r\n","import * as ApiService from '../components/apiservice/apiservice';\r\nimport { useState, useEffect, lazy, Suspense } from 'react';\r\nimport {\r\n  useParams,\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n  useRouteMatch,\r\n  useLocation,\r\n  useHistory,\r\n} from 'react-router-dom';\r\n\r\nconst Cast = lazy(() => import('./Cast'));\r\nconst Reviews = lazy(() => import('./Reviews'));\r\nexport default function MovieDetailsPage() {\r\n  const location = useLocation();\r\n\r\n  const history = useHistory();\r\n  const { url, path } = useRouteMatch();\r\n  const { slug } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n  const moviesId = slug.match(/[a-z0-9]+$/)[0];\r\n\r\n  useEffect(() => {\r\n    ApiService.fetchMovieId(moviesId).then(setMovie);\r\n  }, [moviesId]);\r\n  const GoBack = () => {\r\n    history.push(location?.state?.from ?? '/');\r\n  };\r\n  return (\r\n    <>\r\n      {movie && (\r\n        <>\r\n          <button type=\"button\" onClick={GoBack}>\r\n            Go back\r\n          </button>\r\n\r\n          <div>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w500${movie.data.poster_path}`}\r\n              alt={movie.data.original_title}\r\n              height=\"400\"\r\n            />\r\n            <p>{movie.data.original_title}</p>\r\n            <p>User score{movie.data.vote_average}%</p>\r\n            <p>Overview{movie.data.overview}</p>\r\n            {movie.data.genres.map(genre => {\r\n              return <p key={genre.id}>{genre.name}</p>;\r\n            })}\r\n          </div>\r\n        </>\r\n      )}\r\n      <hr />\r\n\r\n      {movie && (\r\n        <ul>\r\n          <li>\r\n            <NavLink to={`${url}/cast`}>Cast</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to={`${url}/reviews`}>Reviews</NavLink>\r\n          </li>\r\n        </ul>\r\n      )}\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <Switch>\r\n          <Route path={`${path}/cast`}>\r\n            <Cast />\r\n          </Route>\r\n          <Route path={`${path}/reviews`}>\r\n            <Reviews />\r\n          </Route>\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}