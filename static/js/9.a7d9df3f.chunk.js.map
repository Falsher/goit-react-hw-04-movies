{"version":3,"sources":["pages/Reviews.js"],"names":["Reviews","moviesId","useParams","slug","match","useState","reviews","setReviews","useEffect","ApiService","then","data","results","map","review","content","id"],"mappings":"iOAGe,SAASA,IACtB,IACMC,EADWC,cAATC,KACcC,MAAM,cAAc,GAC1C,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,qBAAU,WACRC,IAAwBR,GAAUS,MAAK,SAAAJ,GAAO,OAC5CC,EAAWD,EAAQK,KAAKC,cAEzB,CAACX,IAGF,mCACGK,GACC,mCACE,6BACGA,EAAQO,KAAI,SAAAC,GAAM,OACjB,6BAAqBA,EAAOC,SAAnBD,EAAOE","file":"static/js/9.a7d9df3f.chunk.js","sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport * as ApiService from '../components/apiservice/apiservice';\r\nexport default function Reviews() {\r\n  const { slug } = useParams();\r\n  const moviesId = slug.match(/[a-z0-9]+$/)[0];\r\n  const [reviews, setReviews] = useState('');\r\n\r\n  useEffect(() => {\r\n    ApiService.fetchReviews(moviesId).then(reviews =>\r\n      setReviews(reviews.data.results),\r\n    );\r\n  }, [moviesId]);\r\n\r\n  return (\r\n    <>\r\n      {reviews && (\r\n        <>\r\n          <ul>\r\n            {reviews.map(review => (\r\n              <li key={review.id}>{review.content}</li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}